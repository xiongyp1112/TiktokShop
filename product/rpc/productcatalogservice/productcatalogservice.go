// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: product.proto

package productcatalogservice

import (
	"context"

	"tiktokShop/product/rpc/product"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetProductReq      = product.GetProductReq
	GetProductResp     = product.GetProductResp
	ListProductsReq    = product.ListProductsReq
	ListProductsResp   = product.ListProductsResp
	Product            = product.Product
	SearchProductsReq  = product.SearchProductsReq
	SearchProductsResp = product.SearchProductsResp

	ProductCatalogService interface {
		ListProducts(ctx context.Context, in *ListProductsReq, opts ...grpc.CallOption) (*ListProductsResp, error)
		GetProduct(ctx context.Context, in *GetProductReq, opts ...grpc.CallOption) (*GetProductResp, error)
		SearchProducts(ctx context.Context, in *SearchProductsReq, opts ...grpc.CallOption) (*SearchProductsResp, error)
	}

	defaultProductCatalogService struct {
		cli zrpc.Client
	}
)

func NewProductCatalogService(cli zrpc.Client) ProductCatalogService {
	return &defaultProductCatalogService{
		cli: cli,
	}
}

func (m *defaultProductCatalogService) ListProducts(ctx context.Context, in *ListProductsReq, opts ...grpc.CallOption) (*ListProductsResp, error) {
	client := product.NewProductCatalogServiceClient(m.cli.Conn())
	return client.ListProducts(ctx, in, opts...)
}

func (m *defaultProductCatalogService) GetProduct(ctx context.Context, in *GetProductReq, opts ...grpc.CallOption) (*GetProductResp, error) {
	client := product.NewProductCatalogServiceClient(m.cli.Conn())
	return client.GetProduct(ctx, in, opts...)
}

func (m *defaultProductCatalogService) SearchProducts(ctx context.Context, in *SearchProductsReq, opts ...grpc.CallOption) (*SearchProductsResp, error) {
	client := product.NewProductCatalogServiceClient(m.cli.Conn())
	return client.SearchProducts(ctx, in, opts...)
}
