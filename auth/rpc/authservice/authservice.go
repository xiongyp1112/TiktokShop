// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: auth.proto

package authservice

import (
	"context"

	"tiktokShop/auth/rpc/auth"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeliverTokenReq = auth.DeliverTokenReq
	DeliveryResp    = auth.DeliveryResp
	VerifyResp      = auth.VerifyResp
	VerifyTokenReq  = auth.VerifyTokenReq

	AuthService interface {
		DeliverTokenByRPC(ctx context.Context, in *DeliverTokenReq, opts ...grpc.CallOption) (*DeliveryResp, error)
		VerifyTokenByRPC(ctx context.Context, in *VerifyTokenReq, opts ...grpc.CallOption) (*VerifyResp, error)
	}

	defaultAuthService struct {
		cli zrpc.Client
	}
)

func NewAuthService(cli zrpc.Client) AuthService {
	return &defaultAuthService{
		cli: cli,
	}
}

func (m *defaultAuthService) DeliverTokenByRPC(ctx context.Context, in *DeliverTokenReq, opts ...grpc.CallOption) (*DeliveryResp, error) {
	client := auth.NewAuthServiceClient(m.cli.Conn())
	return client.DeliverTokenByRPC(ctx, in, opts...)
}

func (m *defaultAuthService) VerifyTokenByRPC(ctx context.Context, in *VerifyTokenReq, opts ...grpc.CallOption) (*VerifyResp, error) {
	client := auth.NewAuthServiceClient(m.cli.Conn())
	return client.VerifyTokenByRPC(ctx, in, opts...)
}
